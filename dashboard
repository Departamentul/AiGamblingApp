from fastapi import FastAPI
import requests
from pydantic import BaseModel

app = FastAPI()

SPORTS_DATA_API = "https://api.sportsdata.io/v4/soccer/scores/json/GamesByDate/2024-MAR-17"
API_KEY = "4dc44be3808f4b89b7ec34fce89b44e0"

class BetRecommendation(BaseModel):
    match: str
    prediction: str
    confidence: float

@app.get("/stats")
def get_stats():
    headers = {"Ocp-Apim-Subscription-Key": API_KEY}
    response = requests.get(SPORTS_DATA_API, headers=headers)
    if response.status_code == 200:
        return response.json()
    return {"error": "Failed to fetch stats"}

@app.get("/recommendations")
def get_recommendations():
    # Simulare recomandÄƒri bazate pe AI
    recommendations = [
        BetRecommendation(match="Team A vs Team B", prediction="Team A wins", confidence=0.85),
        BetRecommendation(match="Team C vs Team D", prediction="Draw", confidence=0.75)
    ]
    return recommendations

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
